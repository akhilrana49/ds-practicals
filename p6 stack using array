#include <iostream>
using namespace std;

class Stack
{
public:
    // properties
    int *arr;
    int size;
    int top;

    // constructor
    Stack(int size)
    {
        this->size = size;
        top = -1;
        arr = new int(size);
    }

    // push operation
    void push(int element)
    {
        if (size - top > 1)
        {
            top++;
            arr[top] = element;
        }
        else
        {
            cout << "Stack OverFow" << endl;
        }
    }

    // pop operation
    void pop()
    {
        if (top >= 0)
        {
            top--;
        }
        else
        {
            cout << "Stack UnderFlow" << endl;
        }
    }

    // find top element
    int peek()
    {
        if (top >= 0)
        {
            return arr[top];
        }
        else
        {
            cout << "Stack is empty" << endl;
            return -1;
        }
    }

    // find size
    int stackSize()
    {
        if (top >= 0)
        {
            return size;
        }
        else
        {
            cout << "Stack is empty" << endl;
            return -1;
        }
    }

    // find empty
    bool emptyCheck()
    {
        if (top >= 0)
        {
            return false;
        }
        else
        {
            return true;
        }
    }
};

int main()
{

    Stack st(3);

    st.push(15);
    st.push(29);

    cout << "Top element - " << st.peek() << endl;

    st.push(15);

    cout << "Top element - " << st.peek() << endl;

    st.pop();
    st.pop();
    st.pop();
    st.pop();

    cout << "Top element - " << st.peek() << endl;

    (st.emptyCheck() == 0) ? cout << "Empty" << endl : cout << "Non-Empty" << endl;

    cout << "Size of stack - " << st.stackSize() << endl;

    return 0;
}
